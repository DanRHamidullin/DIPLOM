{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","UserList.js","utils.js","screens/FeedbackScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_FEEDBACK_REQUEST","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userFeedback","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","login","email","password","dispatch","a","config","headers","axios","post","data","setItem","stringify","response","detail","message","getUserDetails","id","getState","Authorization","token","get","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","setEmail","setPassword","redirect","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","UserList","setUsers","mounted","getUsers","username","FeedbackScreen","setUsername","userphone","setUserphone","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a70fcd31.chunk.js","sourcesContent":["//Здесь хранятся константы - различные типы действий.\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n\n","//Здесь хранятся константы - различные типы действий.\nexport const CART_ADD_ITEM = 'CART_ADD_ITEM' //Добавление товара в корзину\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM' //Удаление товара из корзины\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS' //Сохранение адреса доставки\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD' //Сохранение метода оплаты\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS' //Очистка корзины","//Здесь хранятся константы - различные типы действий.\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_FEEDBACK_REQUEST = 'USER_FEEDBACK_REQUEST'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","//Здесь хранятся константы - различные типы действий.\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer, userFeedbackReducer,\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\n//Хранилище (store) — это объект,\n// 1) содержит состояние приложения;\n// 2) отображает состояние через getState();\n// 3) может обновлять состояние через dispatch();\n// 4) позволяет регистрироваться (или удаляться) в качестве слушателя изменения состояния через subscribe().\n\n//Вспомогательная функция combineReducers преобразует объект, значениями которого являются различные функции редюсеры,\n// в одну функцию редюсер, которую можно передать в метод createStore.\n//Это метод, который позволяет вместо того, чтобы создавать один огромный reducer для всего состояния приложения сразу,\n// разбивать его на отдельные модули.\n\n// Результирующий редюсер - reducer, вызывает вложенные редюсеры и собирает их результаты в единый объект состояния.\n// Состояние, созданное именами combineReducers(), сохраняет состояние каждого редюсера под их ключами,\n// переданные в combineReducers()\n\n//reducer — это чистая функция которая будет отвечать за обновление состояния.\n// Здесь реализовывается логика в соответствие с которой будет происходить обновление полей store.\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userFeedback: userFeedbackReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n//Объекты веб-хранилища localStorage и sessionStorage позволяют хранить пары ключ/значение в памяти браузера.\n// Что в них важно – данные, которые в них записаны, сохраняются после обновления страницы (в случае sessionStorage)\n// и даже после перезапуска браузера (при использовании localStorage).\n\n//Получение корзина продуктов из локального хранилища по ключу 'cartItems'.\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\n//Получение информации о юзере из локального хранилища по ключу 'userInfo'.\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n//Получение адреса доставки из локального хранилища по ключу 'shippingAddress'.\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\n//Это инициализация начального состояния store, с использованием указанных выше данных.\n//объект, представляющий начальное состояние хранилища.\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\n//Redux Thunk это middleware библиотека, которая позволяет вам вызвать action creator,\n// возвращая при этом функцию вместо объекта. Функция принимает метод dispatch как аргумент,\n// чтобы после того, как асинхронная операция завершится, использовать его для диспатчинга\n// обычного экшена, внутри тела функции.\n//\n// Thunk, это когда функция используется для задержки выполнения операции.\n//Они предоставляют стороннюю точку расширения, между отправкой экшена и моментом, когда этот экшен достигает редюсера.\nconst middleware = [thunk]\n\n//Здесь создается глобальное хранилище приложения, через createStore, которые принимает\n// редюсеры(функии отвечающие за обновление состояния), начальное состояние, и миддлвары.\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload, }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n//Reducer слой.\n//Reducer - это чистая функция, которая будет отвечать за обновление состояния.\n// Здесь реализовывается логика при которой будет происходить обновление полей store.\n//Чистая функция работает независимо от состояния программы и выдаёт выходное значение, принимая входное\n// и не меняя ничего в нём и в остальной программе. Получается, что редуктор возвращает совершенно новый\n// объект дерева состояний, которым заменяется предыдущий.\n//Функция принимает значение текущего состояния (state) и обьект события (action).\n// Обьект события содержит два свойства — это тип события (action.type) и значение события (action.value).\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    //Через switch мы проверяем тип действия (action.type) - и в соответсвии с ним происходит обновление полей store\n    switch (action.type) {\n        //Здесь добавляем товар в корзину\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x) //Либо мы добавим новый товар в корзину, либо обновим текущий.\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        //Здесь удаляем товар из корзины\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n                //Фильтрует по принципу совпадения в payload, оставляет только те элементы, которые совпали с payload.\n            }\n\n        //Здесь сохраняем адрес доставки\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        //Здесь сохраняем метод оплаты\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        //Здесь обнуляем корзину\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET, USER_FEEDBACK_REQUEST,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userFeedbackReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_FEEDBACK_REQUEST:\n            return { loading: true }\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n\n    //useState - это хук, который позволяет добавлять состояние React к компонентам-функциям.\n    //Обьявили переменную состояния keyword и функцию обновления значения setKeyword, и инициализировали его начальное состояние через useState('').\n    //Этот хук возвращает нам текущее состояне keyword\n    const [keyword, setKeyword] = useState('')\n\n    //useHistory - это хук React Router, который предоставляет доступ к экземпляру истории, который используется для навигации.\n    //То есть дальше мы можем использовать этот обьект для перехода на другую страницу через history.push()\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) { //Здесь переходим по введеной строке поиска.\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else { //Здесь остаемся на месте, так как поле поиска пустое.\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Поиск\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions' //Actions используемые в компоненте.\n\n//Это компонент - верхней части страницы (меню)\nfunction Header() {\n\n    //Хуки - это то, что позволяет использовать состояние и другие возможности реакт без написания классов.\n    //useSelector - это хук,который позволяет извлекать данные из состояния хранилища Redux с помощью функции селектора.\n    //Селектор будет запускаться всякий раз, когда компонент функции выполняет рендеринг (если только его ссылка\n    // не изменилась с момента предыдущего рендеринга компонента, так что кэшированный результат может\n    // быть возвращен хуком без повторного запуска селектора).\n    // useSelector() также подпишется на store Redux и будет запускать свой селектор всякий раз, когда отправляется действие.\n    const userLogin = useSelector(state => state.userLogin) //для получения доступа к селекторам.\n    const { userInfo } = userLogin\n\n    //Этот хук возвращает ссылку на dispatch функцию из хранилища Redux.\n    const dispatch = useDispatch() //для получения доступа к диспетчеру\n\n    //Функция для выхода из аккаунта.\n    const logoutHandler = () => {\n        //Здесь происходит вызов экшона logout().\n        dispatch(logout())\n    }\n\n    //Здесь уже хранится тело самого компонента.\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Магазин</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Корзина</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Профиль</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Выход</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Вход</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Пользователи</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Продукты</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Заказы</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; Магазин мастерской</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} отзыв`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n\n                <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n\n// function Article({ product }) {\n//     return (\n//         <Card className=\"my-3 p-3 rounded\">\n//             <Link to={`/product/${product._id}`}>\n//                 <Card.Img src={product.image} />\n//             </Link>\n//\n//             <Card.Body>\n//                 <Link to={`/product/${product._id}`}>\n//                     <Card.Title as=\"div\">\n//                         <strong>{product.name}</strong>\n//                     </Card.Title>\n//                 </Link>\n//\n//                 <Card.Text as=\"div\">\n//                     <div className=\"my-3\">\n//                         <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n//                     </div>\n//                 </Card.Text>\n//\n//\n//                 <Card.Text as=\"h3\">\n//                     ${product.price}\n//                 </Card.Text>\n//             </Card.Body>\n//         </Card>\n//     )\n// }\n//\n// export default Product;","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Загрузка...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    //Это хук - принимает эффект, который запуститься, только если значение dispatch не обновилось между повторными отрисовками.\n    //По умолчанию эффекты запускаются после каждого завершённого рендеринга,\n    // но вы можете решить запускать их только при изменении определённых значений.\n    // Функция, переданная в useEffect, будет запущена после того, как рендер будет зафиксирован на экране.\n    //В нашем случае эффект будет запущен, только если изменился dispatch,\n    // то есть если изменилось состояние полученное в массиве deps.\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause='hover' className='bg-dark'>\n                    {products.map(product => (\n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h4>{product.name} (${product.price})</h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductCarousel\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <h1>Неадавние товары</h1>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Назад</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} отзыв(ы)`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Цена: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Описание: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Прайс:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Статус:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'На складе' : 'Нет на складе'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Количество</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Добавить в корзину\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Отзывы</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>Нет отзывов</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Написать отзыв</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Отзыв отправлен</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Рэйтинг</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Выбор...</option>\n                                                            <option value='1'>1 - Очень плохо</option>\n                                                            <option value='2'>2 - плохо</option>\n                                                            <option value='3'>3 - Удовлетворительно</option>\n                                                            <option value='4'>4 - Хорошо</option>\n                                                            <option value='5'>5 - Отлично</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Отзывы</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Отправить\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Пожалуйста, <Link to='/login'>login</Link> оставьте отзыв</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n//Данный метод принимает на вход id конкретного продукта и qty - колличество продукта.\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    //Ставится async в обьявлении функции, чтобы указать, что функция работант асинхронно.\n    //Внутри функции ставится await, который возвращает все, что возвращает функция async при ее выполнении.\n    //В нашем случае происходит асснихронный запрос на сервер.\n\n    //Это ответ который придет от бэка, и будет использоваться в payload, то есть произойдет\n    // передача в конкретный редюсер.\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    ////Отправляем action в store через метод dispatch(), а уже полсе этого наш action подхватит reducer,\n    // который определит как состояния приложения изменится от полученного action-a в store.\n    // Он вызывается у объекта store который мы создаём в store.js.\n    //Эта функция вызовет функцию reducer который обработает событие и обновит соответствующие поля хранилища.\n    //То есть здесь в редюсер перейдут данные о типе и полезная нагрузка, то есть внутренние поля.\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    //сохранить пару ключ/значение в локальное хранилище.\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n//Данный метод принимает на вход id конкретного продукта\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    //Отправляем action в store через метод dispatch()\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Корзина</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Ваша корзина пуста <Link to='/'>Вернуться</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Перейти к оплате\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Войти</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email адрес</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Введите Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Пароль</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Введите пароль'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Войти\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Новый пользователь? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Зарегестрироваться\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Пароль не совпадает')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Войти</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Имя</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Введите имя'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Адрес</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Введите Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Пароль</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Введите пароль'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Повторите пароль</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Повторите пароль'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Зарегестрироваться\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Уже есть аккаунт? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Войти\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Пароль не совпадает')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>Профиль пользователя</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Имя</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Введите имя'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email адрес</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Введите Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Пароль</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Введите пароль'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Повторите пароль</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Повторите пароль'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Обновить\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Дата</th>\n                                        <th>Итог</th>\n                                        <th>Оплата</th>\n                                        <th>Доставка</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Подробнее</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n//Это компонент\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Вход</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Вход</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Доставка</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Доставка</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Оплата</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Оплата</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Заказ</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Заказ</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Доставка</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Адрес</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>Город</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Ввести город'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Индекс</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Индекс'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Страна</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Ввести страну'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Продолжить\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Выбрать способ</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal '\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Продолжить\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Доставка</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Способ оплаты</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Ваша корзина пуста\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Сумма заказов</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Товары:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Доставка:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Налог:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Итого:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Заказ\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Заказ: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Доставка</h2>\n                                    <p><strong>Имя: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Доставка: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Доставлено {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Не доставлено</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Способ оплаты</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Оплата прошла{order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Оплата не прошла</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Лист заказов</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Заказов нет\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Сумма заказов</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Товары:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Доставка:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Налог:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Итого:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Доставлено\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Вы хотите удалить этого пользователя?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Пользователи</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Имя</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Назад\n            </Link>\n\n            <FormContainer>\n                <h1>Измение пользователя</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Имя</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Ввести имя'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Почтовый адрес</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Ввести Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Обновить\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Удалить товар?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Товар</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Создать продукт\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Название</th>\n                                        <th>Цена</th>\n                                        <th>Категория</th>\n                                        <th>Брэнд</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Назад\n            </Link>\n\n            <FormContainer>\n                <h1>Изменить товар</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Имя</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Ввести имя'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Цена</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Ввести стоимость'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Изображение</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Добавить изображение'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='файл'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Брэнд</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Ввести брэнд'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Запас</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Ввести запас'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Категория</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Ввести категорию'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Описание</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Ввести описание'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                обновить\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Пользователь</th>\n                                    <th>Дата</th>\n                                    <th>Итог</th>\n                                    <th>Оплата</th>\n                                    <th>Доставка</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Подробнее\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { formatUserName } from './utils';\n\nfunction UserList() {\n const [users, setUsers] = useState([]);\n\n // Load the data from the server\n useEffect(() => {\n   let mounted = true;\n\n   const getUsers = async () => {\n     const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n     if (mounted) {\n       setUsers(response.data);\n     }\n   };\n\n   getUsers();\n\n   return () => { mounted = false; }\n }, []);\n\n return (\n   <div className=\"App\">\n     <div>Users:</div>\n     {users.length ? (\n       <ul data-testid=\"user-list\">\n         {users.map(user => (\n           <li key={user.id} className=\"user\" data-testid=\"user-item\">\n             <span>{user.name}</span> (<span>{formatUserName(user.username)}</span>)\n           </li>\n         ))}\n       </ul>\n     ) : (\n       <div>Загрузка пользователей...</div>\n     )}\n   </div>\n );\n}\n\nexport default UserList;","export function formatUserName(username) {\n return 'login: ' + username;\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction FeedbackScreen({ location, history }) {\n    const [username, setUsername] = useState('')\n    const [userphone, setUserphone] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, userphone))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Фидбэк</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='UserName'>\n                    <Form.Label>Имя пользователя</Form.Label>\n                    <Form.Control\n                        type='username'\n                        placeholder='Ввести имя пользователя'\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='UserPhone'>\n                    <Form.Label>Телефон</Form.Label>\n                    <Form.Control\n                        type='userphone'\n                        placeholder='Ввести телефон '\n                        value={userphone}\n                        onChange={(e) => setUserphone(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Отправить\n                </Button>\n            </Form>\n\n\n        </FormContainer>\n    )\n}\n\nexport default FeedbackScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserList from \"./UserList\";\nimport FeedbackScreen from \"./screens/FeedbackScreen\";\n\n//Здесь мы настраиваем навигацию через React-Router-Dom\n//path=\"...\"- это путь в котором мы находимся,\n//component{...} - это компонент, который должен отобразиться на выбранном пути.\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/testpage' component={UserList} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/feedback' component={FeedbackScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//Это точка, в которой наше приложение начинает работу.\n//Происходит рендеринг компонента App.\n//Для использование store в компоненте нам необходимо передавать его в пропсы(почти аргументы) через Provider.\n//Рендеринг — это процесс, в рамках которого React опрашивает ваши компоненты, требуя от них актуальное описание\n// той секции пользовательского интерфейса, за которую они отвечают, основываясь на текущей комбинации\n// пропсов (props) и состояния (state).\n//Есть два этапа:\n//этап рендеринга (render phase) — рендеринг всех компонентов и вычисление изменений;\n// этап фиксации (commit phase) — процесс применения изменений к DOM.\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}